// Supported resolutions: 720x480, 1360x768
// Use -r $(res) to use tvservice resolution
#define SCREENWIDTH   720
#define SCREENHEIGHT  480

//#define SCREENWIDTH             168//80
//#define SCREENHEIGHT            47//25

// MAXBOXES is defined in main.c
//#define BACKBOX         boxes[0]
//#define BACKBOXINDEX    0
#define KEYBOX          boxes[1]
#define KEYBOXINDEX     1
#define OUTBOX          boxes[2]
#define OUTCURSOR       cursors[2]
#define OUTBOXINDEX     2
#define KEYOUT		    boxes[5]
#define KEYOUTCURSOR    cursors[5]
#define KEYOUTINDEX	    5
#define SYNCBOX		    boxes[6]
#define SYNCBOXINDEX    6
#define INBOX           boxes[7]
#define INBOXINDEX      7
#define BUFFERBOX       boxes[8]
#define BUFFERBOXINDEX  8
#define KEYLOGBUFFERLIST		boxes[9]
#define KEYLOGBUFFERLISTINDEX	9
#define POSTBOX			boxes[10]
#define POSTBOXINDEX	10
#define INBOX1			boxes[11]
#define INBOX1INDEX		11
#define INBOX2			boxes[12]
#define INBOX2INDEX		12
#define INBOX3			boxes[13]
#define INBOX3INDEX		13
#define INBOX4			boxes[14]
#define INBOX4INDEX		14
#define ACTIONBUFFERLIST		boxes[15]
#define ACTIONBUFFERLISTINDEX	15

//#define KEYBOXENABLED			1
#define KEYBOXPOSX              101
#define KEYBOXPOSY              2
#define KEYBOXSIZEW             52
#define KEYBOXSIZEH             10

#define BUFFERBOXENABLED		1
#define BUFFERBOXPOSX			1
#define BUFFERBOXPOSY			25
#define BUFFERBOXSIZEW			162
#define BUFFERBOXSIZEIW			160
#define BUFFERBOXSIZEH			18
#define BUFFERBOXSIZEIH			16

/*
//#define POSTBOXENABLED		1
#define POSTBOXPOSX			1
#define POSTBOXPOSY			(KEYOUTPOSY + KEYOUTSIZEH + 1)
#define POSTBOXSIZEW			(INBOXSIZEW)
#define POSTBOXSIZEIW			(POSTBOXSIZEW - 2)
#define POSTBOXSIZEH			(INBOXSIZEH)
#define POSTBOXSIZEIH			(POSTBOXSIZEH - 2)
*/
#define INBOXSIZEW			64
#define INBOXSIZEH			4

#define KEYOUTENABLED			1
#define KEYOUTPOSX			8
#define KEYOUTPOSY			1//(INBOXPOSY + INBOXSIZEH + 1)
#define KEYOUTSIZEW			(INBOXSIZEW - SYNCBOXSIZEW - 1)
#define KEYOUTSIZEIW			(KEYOUTSIZEW - 2)
#define KEYOUTSIZEH			5
#define KEYOUTSIZEIH			(KEYOUTSIZEH - 2)

#define SYNCBOXENABLED			1
#define SYNCBOXPOSX			(KEYOUTPOSX + KEYOUTSIZEW + 1)
#define SYNCBOXPOSY			(KEYOUTPOSY)
#define SYNCBOXSIZEW			9
#define SYNCBOXSIZEH			5//12

#define OUTBOXENABLED			1
#define OUTBOXPOSX			(KEYOUTPOSX)//(INBOXPOSX + INBOXSIZEW + 1)
#define OUTBOXPOSY			(KEYOUTPOSY + KEYOUTSIZEH)//(INBOXPOSY)
#define OUTBOXSIZEW			(KEYOUTSIZEW + 1 + SYNCBOXSIZEW)//72 // 38
#define OUTBOXSIZEH			(KEYOUTSIZEH)//16

#define INBOXENABLED			1
#define INBOXAUTOEXEC			1
#define INBOXPOSX				(KEYOUTPOSX)
#define INBOXPOSY				(OUTBOXPOSY + OUTBOXSIZEH)//2
#define INBOXSIZEIW				(INBOXSIZEW - 2)
#define INBOXSIZEIH				(INBOXSIZEH - 2)

#define KEYLOGBUFFERLISTENABLED		1
#define KEYLOGBUFFERLISTPOSX		(INBOXPOSX)
#define KEYLOGBUFFERLISTPOSY		(INBOXPOSY + INBOXSIZEH)
#define KEYLOGBUFFERLISTSIZEW		52
#define KEYLOGBUFFERLISTSIZEIW		50
#define KEYLOGBUFFERLISTSIZEH		7
#define KEYLOGBUFFERLISTSIZEIH		5

#define ACTIONBUFFERLISTENABLED		1
#define ACTIONBUFFERLISTPOSX		(KEYLOGBUFFERLISTPOSX + KEYLOGBUFFERLISTSIZEW + 1)
#define ACTIONBUFFERLISTPOSY		(KEYLOGBUFFERLISTPOSY)
#define ACTIONBUFFERLISTSIZEW		102
#define ACTIONBUFFERLISTSIZEIW		100
#define ACTIONBUFFERLISTSIZEH		(KEYLOGBUFFERLISTSIZEH)
#define ACTIONBUFFERLISTSIZEIH		(ACTIONBUFFERLISTSIZEH - 2)

#define INBOX1ENABLED			1
#define INBOX1AUTOEXEC			1
#define INBOX1POSX				1 // (KEYLOGBUFFERLISTPOSX)
#define INBOX1POSY				(KEYLOGBUFFERLISTPOSY) // (KEYLOGBUFFERLISTPOSY + KEYLOGBUFFERLISTSIZEH)
#define INBOX1SIZEW				77 // 30 // (KEYLOGBUFFERLISTSIZEW + 1 + ACTIONBUFFERLISTSIZEW - 1 - 50)
#define INBOX1SIZEIW			(INBOX1SIZEW - 2)
#define INBOX1SIZEH				4
#define INBOX1SIZEIH			(INBOX1SIZEH - 2)

#define INBOX2ENABLED			1
#define INBOX2AUTOEXEC			1
#define INBOX2POSX				(INBOX1POSX + INBOX1SIZEW + 1)
#define INBOX2POSY				(INBOX1POSY)
#define INBOX2SIZEW				77 // 30 // 50
#define INBOX2SIZEIW			(INBOX2SIZEW - 2)
#define INBOX2SIZEH				(INBOX1SIZEH)
#define INBOX2SIZEIH			(INBOX2SIZEH - 2)

#define INBOX3ENABLED			1
#define INBOX3AUTOEXEC			1
#define INBOX3POSX				(INBOX1POSX)
#define INBOX3POSY				(INBOX1POSY + INBOX1SIZEH)
#define INBOX3SIZEW				(INBOX1SIZEW + 1 + INBOX2SIZEW)
#define INBOX3SIZEIW			(INBOX3SIZEW - 2)
#define INBOX3SIZEH				8
#define INBOX3SIZEIH			(INBOX3SIZEH - 2)

#define INBOX4ENABLED			1
//#define INBOX4AUTOEXEC			1
#define INBOX4POSX				(INBOX3POSX + INBOX3SIZEW + 1)
#define INBOX4POSY				(INBOX1POSY)
#define INBOX4SIZEW				(INBOX1SIZEW)
#define INBOX4SIZEIW			(INBOX4SIZEW - 2)
#define INBOX4SIZEH				14 //(INBOX1SIZEH)
#define INBOX4SIZEIH			(INBOX4SIZEH - 2)

#define INBOXNINDEXDEF			{ INBOXINDEX, INBOX1INDEX, INBOX2INDEX, INBOX3INDEX, INBOX4INDEX }
#define INBOXNPOSXDEF			{ INBOXPOSX, INBOX1POSX, INBOX2POSX, INBOX3POSX, INBOX4POSX }
#define INBOXNPOSYDEF			{ INBOXPOSY, INBOX1POSY, INBOX2POSY, INBOX3POSY, INBOX4POSY }
#define INBOXNSIZEWDEF			{ INBOXSIZEW, INBOX1SIZEW, INBOX2SIZEW, INBOX3SIZEW, INBOX4SIZEW }
#define INBOXNSIZEIWDEF			{ INBOXSIZEIW, INBOX1SIZEIW, INBOX2SIZEIW, INBOX3SIZEIW, INBOX4SIZEIW }
#define INBOXNSIZEHDEF			{ INBOXSIZEH, INBOX1SIZEH, INBOX2SIZEH, INBOX3SIZEH, INBOX4SIZEH }
#define INBOXNSIZEIHDEF			{ INBOXSIZEIH, INBOX1SIZEIH, INBOX2SIZEIH, INBOX3SIZEIH, INBOX4SIZEIH }

int inboxnindex[] = INBOXNINDEXDEF;
int inboxnposx[] = INBOXNPOSXDEF;
int inboxnposy[] = INBOXNPOSYDEF;
int inboxnsizew[] = INBOXNSIZEWDEF;
int inboxnsizeiw[] = INBOXNSIZEIWDEF;
int inboxnsizeh[] = INBOXNSIZEHDEF;
int inboxnsizeih[] = INBOXNSIZEIHDEF;

void initboxes(int screenwidth, int screenheight) {
  BACKBOX.x = 0;
  BACKBOX.y = 0;
  BACKBOX.width = screenwidth;
  BACKBOX.height = screenheight;
  BACKBOX.keepalive = 0;
  BACKBOX.hasmoved = 0;

  drawbackbox(BACKBOX.width, BACKBOX.height);
#ifdef KEYBOXENABLED
  KEYBOX.x = KEYBOXPOSX;
  KEYBOX.y = KEYBOXPOSY;
  KEYBOX.width = KEYBOXSIZEW;
  KEYBOX.height = KEYBOXSIZEH;
  KEYBOX.keepalive = 0;
  KEYBOX.hasmoved = 0;
  cursorsethome(KEYBOXINDEX, KEYBOXPOSX, KEYBOXPOSY, 1, 1);
#else
  cursorsethome(KEYBOXINDEX, 0, 0, 0, 0);
#endif
#ifdef OUTBOXENABLED
  OUTBOX.x = OUTBOXPOSX;
  OUTBOX.y = OUTBOXPOSY;
  OUTBOX.width = OUTBOXSIZEW;
  OUTBOX.height = OUTBOXSIZEH;
  OUTBOX.keepalive = 0;
  OUTBOX.hasmoved = 0;
  cursorsethome(OUTBOXINDEX, OUTBOXPOSX, OUTBOXPOSY, 1, 1);
#else
  cursorsethome(OUTBOXINDEX, 0, 0, 0, 0);
#endif
#ifdef KEYOUTENABLED
  KEYOUT.x = KEYOUTPOSX;
  KEYOUT.y = KEYOUTPOSY;
  KEYOUT.width = KEYOUTSIZEW;
  KEYOUT.height = KEYOUTSIZEH;
  KEYOUT.keepalive = 0;
  KEYOUT.hasmoved = 0;
  cursorsethome(KEYOUTINDEX, KEYOUTPOSX, KEYOUTPOSY, 1, 1);
#else
  cursorsethome(KEYOUTINDEX, 0, 0, 0, 0);
#endif
#ifdef SYNCBOXENABLED
  SYNCBOX.x = SYNCBOXPOSX;
  SYNCBOX.y = SYNCBOXPOSY;
  SYNCBOX.width = SYNCBOXSIZEW;
  SYNCBOX.height = SYNCBOXSIZEH;
  SYNCBOX.keepalive = 0;
  SYNCBOX.hasmoved = 0;
  cursorsethome(SYNCBOXINDEX, SYNCBOXPOSX, SYNCBOXPOSY, 1, 1);
#else
  cursorsethome(SYNCBOXINDEX, 0, 0, 0, 0);
#endif
#ifdef INBOXENABLED
  INBOX.x = INBOXPOSX;
  INBOX.y = INBOXPOSY;
  INBOX.width = INBOXSIZEW;
  INBOX.height = INBOXSIZEH;
  INBOX.keepalive = 0;
  INBOX.hasmoved = 0;
  INBOX.backgroundpid = 0;
  cursorsethome(INBOXINDEX, INBOXPOSX, INBOXPOSY, 1, 1);
#else
  cursorsethome(INBOXINDEX, 0, 0, 0, 0);
#endif
#ifdef BUFFERBOXENABLED
  BUFFERBOX.x = BUFFERBOXPOSX;
  BUFFERBOX.y = BUFFERBOXPOSY;
  BUFFERBOX.width = BUFFERBOXSIZEW;
  BUFFERBOX.height = BUFFERBOXSIZEH;
  BUFFERBOX.keepalive = 0;
  BUFFERBOX.hasmoved = 0;
  cursorsethome(BUFFERBOXINDEX, BUFFERBOXPOSX, BUFFERBOXPOSY, 1, 1);
#else
  cursorsethome(BUFFERBOXINDEX, 0, 0, 0, 0);
#endif
#ifdef KEYLOGBUFFERLISTENABLED
  KEYLOGBUFFERLIST.x = KEYLOGBUFFERLISTPOSX;
  KEYLOGBUFFERLIST.y = KEYLOGBUFFERLISTPOSY;
  KEYLOGBUFFERLIST.width = KEYLOGBUFFERLISTSIZEW;
  KEYLOGBUFFERLIST.innerwidth = KEYLOGBUFFERLISTSIZEIW;
  KEYLOGBUFFERLIST.height = KEYLOGBUFFERLISTSIZEH;
  KEYLOGBUFFERLIST.innerheight = KEYLOGBUFFERLISTSIZEIH;
  KEYLOGBUFFERLIST.keepalive = 0;
  KEYLOGBUFFERLIST.hasmoved = 0;
  cursorsethome(KEYLOGBUFFERLISTINDEX, KEYLOGBUFFERLISTPOSX, KEYLOGBUFFERLISTPOSY, 1, 1);
#else
  cursorsethome(KEYLOGBUFFERLISTINDEX, 0, 0, 0, 0);
#endif
#ifdef ACTIONBUFFERLISTENABLED
  ACTIONBUFFERLIST.x = ACTIONBUFFERLISTPOSX;
  ACTIONBUFFERLIST.y = ACTIONBUFFERLISTPOSY;
  ACTIONBUFFERLIST.width = ACTIONBUFFERLISTSIZEW;
  ACTIONBUFFERLIST.innerwidth = ACTIONBUFFERLISTSIZEIW;
  ACTIONBUFFERLIST.height = ACTIONBUFFERLISTSIZEH;
  ACTIONBUFFERLIST.innerheight = ACTIONBUFFERLISTSIZEIH;
  ACTIONBUFFERLIST.keepalive = 0;
  ACTIONBUFFERLIST.hasmoved = 0;
  cursorsethome(ACTIONBUFFERLISTINDEX, ACTIONBUFFERLISTPOSX, ACTIONBUFFERLISTPOSY, 1, 1);
#else
  cursorsethome(ACTIONBUFFERLISTINDEX, 0, 0, 0, 0);
#endif
#ifdef POSTBOXENABLED
  POSTBOX.x = POSTBOXPOSX;
  POSTBOX.y = POSTBOXPOSY;
  POSTBOX.width = POSTBOXSIZEW;
  POSTBOX.height = POSTBOXSIZEH;
  POSTBOX.keepalive = 0;
  POSTBOX.hasmoved = 0;
  cursorsethome(POSTBOXINDEX, POSTBOXPOSX, POSTBOXPOSY, 1, 1);
#else
  cursorsethome(POSTBOXINDEX, 0, 0, 0, 0);
#endif
#ifdef INBOX1ENABLED
  INBOX1.x = INBOX1POSX;
  INBOX1.y = INBOX1POSY;
  INBOX1.width = INBOX1SIZEW;
  INBOX1.height = INBOX1SIZEH;
  INBOX1.keepalive = 0;
  INBOX1.hasmoved = 0;
  INBOX1.backgroundpid = 0;
  cursorsethome(INBOX1INDEX, INBOX1POSX, INBOX1POSY, 1, 1);
#else
  cursorsethome(INBOX1INDEX, 0, 0, 0, 0);
#endif
#ifdef INBOX2ENABLED
  INBOX2.x = INBOX2POSX;
  INBOX2.y = INBOX2POSY;
  INBOX2.width = INBOX2SIZEW;
  INBOX2.height = INBOX2SIZEH;
  INBOX2.keepalive = 0;
  INBOX2.hasmoved = 0;
  INBOX2.backgroundpid = 0;
  cursorsethome(INBOX2INDEX, INBOX2POSX, INBOX2POSY, 1, 1);
#else
  cursorsethome(INBOX2INDEX, 0, 0, 0, 0);
#endif
#ifdef INBOX3ENABLED
  INBOX3.x = INBOX3POSX;
  INBOX3.y = INBOX3POSY;
  INBOX3.width = INBOX3SIZEW;
  INBOX3.height = INBOX3SIZEH;
  INBOX3.keepalive = 0;
  INBOX3.hasmoved = 0;
  INBOX3.backgroundpid = 0;
  cursorsethome(INBOX3INDEX, INBOX3POSX, INBOX3POSY, 1, 1);
#else
  cursorsethome(INBOX3INDEX, 0, 0, 0, 0);
#endif
#ifdef INBOX4ENABLED
  INBOX4.x = INBOX4POSX;
  INBOX4.y = INBOX4POSY;
  INBOX4.width = INBOX4SIZEW;
  INBOX4.height = INBOX4SIZEH;
  INBOX4.keepalive = 0;
  INBOX4.hasmoved = 0;
  INBOX4.backgroundpid = 0;
  cursorsethome(INBOX4INDEX, INBOX4POSX, INBOX4POSY, 1, 1);
#else
  cursorsethome(INBOX4INDEX, 0, 0, 0, 0);
#endif

}
